<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="0" tests="48" time="5.878"><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_all_together.py]" time="0.07545113563537598"><system-out>
Testing that running pytest on file test_all_together.py results in {&apos;passed&apos;: 9, &apos;skipped&apos;: 0, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests0, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.0, cov-2.6.0
collected 9 items

test_run_all_tests.py .........

=========================== 9 passed in 0.04 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_basic.py]" time="0.03855586051940918"><system-out>
Testing that running pytest on file test_saved_fixture_basic.py results in {&apos;passed&apos;: 2, &apos;skipped&apos;: 0, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests1, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.0, cov-2.6.0
collected 2 items

test_run_all_tests.py ..

=========================== 2 passed in 0.01 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_in_fixture.py]" time="0.042261600494384766"><system-out>
Testing that running pytest on file test_saved_fixture_in_fixture.py results in {&apos;passed&apos;: 2, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests2, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.0, cov-2.6.0
collected 2 items

test_run_all_tests.py ..

=========================== 2 passed in 0.01 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_session_module.py]" time="0.043238162994384766"><system-out>
Testing that running pytest on file test_saved_fixture_session_module.py results in {&apos;passed&apos;: 3, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests3, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.0, cov-2.6.0
collected 3 items

test_run_all_tests.py ...

=========================== 3 passed in 0.01 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_get_session_results_indirect_and_noparam.py]" time="0.04060935974121094"><system-out>
Testing that running pytest on file test_get_session_results_indirect_and_noparam.py results in {&apos;passed&apos;: 5, &apos;skipped&apos;: 0, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests4, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.0, cov-2.6.0
collected 5 items

test_run_all_tests.py .....

=========================== 5 passed in 0.01 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_default_fixtures.py]" time="0.05498337745666504"><system-out>
Testing that running pytest on file test_default_fixtures.py results in {&apos;passed&apos;: 8, &apos;skipped&apos;: 0, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests5, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.0, cov-2.6.0
collected 8 items

test_run_all_tests.py ........

=========================== 8 passed in 0.03 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_results_bags.py]" time="0.05436444282531738"><system-out>
Testing that running pytest on file test_results_bags.py results in {&apos;passed&apos;: 6, &apos;skipped&apos;: 0, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests6, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.0, cov-2.6.0
collected 6 items

test_run_all_tests.py ......

=========================== 6 passed in 0.03 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_get_session_results.py]" time="0.16149449348449707"><system-out>
Testing that running pytest on file test_get_session_results.py results in {&apos;passed&apos;: 16, &apos;skipped&apos;: 1, &apos;failed&apos;: 1}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests7, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.0, cov-2.6.0
collected 18 items

test_run_all_tests.py ........sF........

=================================== FAILURES ===================================
_________________________________ test_failing _________________________________

    def test_failing():
&gt;       pytest.fail(&quot;normal, intended failure here&quot;)
E       Failed: normal, intended failure here

test_run_all_tests.py:116: Failed
================ 1 failed, 16 passed, 1 skipped in 0.13 seconds ================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_in_global_var.py]" time="0.045891761779785156"><system-out>
Testing that running pytest on file test_saved_fixture_in_global_var.py results in {&apos;passed&apos;: 2, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests8, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.0, cov-2.6.0
collected 2 items

test_run_all_tests.py ..

=========================== 2 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_module_params.py]" time="0.05099034309387207"><system-out>
Testing that running pytest on file test_saved_fixture_module_params.py results in {&apos;passed&apos;: 7, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests9, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.0, cov-2.6.0
collected 7 items

test_run_all_tests.py .......

=========================== 7 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_session.py]" time="0.04342985153198242"><system-out>
Testing that running pytest on file test_saved_fixture_session.py results in {&apos;passed&apos;: 2, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests10, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.0, cov-2.6.0
collected 2 items

test_run_all_tests.py ..

=========================== 2 passed in 0.01 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="5" name="test_foo[world]" time="0.5021078586578369"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="5" name="test_foo[self]" time="0.4016275405883789"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="14" name="test_synthesis" time="0.0021944046020507812"><system-out>
   Available `module_results_dct` keys:
    - test_foo[world]
    - test_foo[self]

   Contents of &apos;test_foo[world]&apos;:
    - &apos;pytest_obj&apos;: &lt;function test_foo at 0x7f407c5d8bf8&gt;
    - &apos;status&apos;: passed
    - &apos;duration_ms&apos;: 501.0666847229004
    - &apos;status_details&apos;:
      - &apos;setup&apos;: (&apos;passed&apos;, 0.8544921875)
      - &apos;call&apos;: (&apos;passed&apos;, 501.0666847229004)
      - &apos;teardown&apos;: (&apos;passed&apos;, 0.18668174743652344)
    - &apos;params&apos;: OrderedDict([(&apos;p&apos;, &apos;world&apos;)])
    - &apos;fixtures&apos;: OrderedDict()
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="5" name="test_foo[world]" time="0.5016050338745117"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="5" name="test_foo[self]" time="0.4020864963531494"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="14" name="test_synthesis" time="0.01648116111755371"><system-out>
   `module_results_df` dataframe:

                                            pytest_obj  ...        p
test_id                                                 ...         
test_foo[world]  &lt;function test_foo at 0x7f407c5d8950&gt;  ...    world
test_foo[self]   &lt;function test_foo at 0x7f407c5d8950&gt;  ...     self

[2 rows x 4 columns]
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[0-False]" time="0.5044002532958984"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[0-True]" time="1.0051677227020264"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[1-False]" time="0.4040703773498535"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[1-True]" time="0.8046097755432129"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="34" name="test_synthesis" time="0.006890296936035156"><system-out>
   `module_results_df` dataframe:

| test_id           | pytest_obj                            | status   |   duration_ms | double_sleep_time   |   person_param | person   | current_time               |   nb_letters |
|:------------------|:--------------------------------------|:---------|--------------:|:--------------------|---------------:|:---------|:---------------------------|-------------:|
| test_foo[0-False] | &lt;function test_foo at 0x7f407c593bf8&gt; | passed   |       501.051 | False               |              0 | world    | 2019-05-21T20:23:48.813058 |            5 |
| test_foo[0-True]  | &lt;function test_foo at 0x7f407c593bf8&gt; | passed   |      1001.48  | True                |              0 | world    | 2019-05-21T20:23:49.819899 |            5 |
| test_foo[1-False] | &lt;function test_foo at 0x7f407c593bf8&gt; | passed   |       400.946 | False               |              1 | self     | 2019-05-21T20:23:50.225916 |            4 |
| test_foo[1-True]  | &lt;function test_foo at 0x7f407c593bf8&gt; | passed   |       801.326 | True                |              1 | self     | 2019-05-21T20:23:51.032196 |            4 |
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="5" name="test_foo[world]" time="0.0022745132446289062"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="5" name="test_foo[self]" time="0.002096414566040039"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="17" name="test_synthesis" time="0.0010161399841308594"><system-out>
   Available `fixture_store` keys:
    - &apos;person&apos;
    - &apos;results_bag&apos;

   Contents of `fixture_store[&apos;results_bag&apos;]`:
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-False]&apos;:
      - &apos;current_time&apos;: 2019-05-21T20:23:48.813058
      - &apos;nb_letters&apos;: 5
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-True]&apos;:
      - &apos;current_time&apos;: 2019-05-21T20:23:49.819899
      - &apos;nb_letters&apos;: 5
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-False]&apos;:
      - &apos;current_time&apos;: 2019-05-21T20:23:50.225916
      - &apos;nb_letters&apos;: 4
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-True]&apos;:
      - &apos;current_time&apos;: 2019-05-21T20:23:51.032196
      - &apos;nb_letters&apos;: 4
    - &apos;pytest_harvest/tests/test_doc_basic_results_bag.py::test_foo[world]&apos;:
      - &apos;current_time&apos;: 2019-05-21T20:23:51.044571
      - &apos;nb_letters&apos;: 5
    - &apos;pytest_harvest/tests/test_doc_basic_results_bag.py::test_foo[self]&apos;:
      - &apos;current_time&apos;: 2019-05-21T20:23:51.048491
      - &apos;nb_letters&apos;: 4
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="17" name="test_foo[0]" time="0.0040493011474609375"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="17" name="test_foo[1]" time="0.0019083023071289062"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="24" name="test_synthesis" time="0.0012400150299072266"><system-out>
   Available `fixture_store` keys:
    - &apos;person&apos;
    - &apos;results_bag&apos;

   Contents of `fixture_store[&apos;person&apos;]`:
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-False]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-True]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-False]&apos;: self
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-True]&apos;: self
    - &apos;pytest_harvest/tests/test_doc_basic_saved_fixture.py::test_foo[0]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_saved_fixture.py::test_foo[1]&apos;: self
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="17" name="test_foo[0]" time="0.001957416534423828"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="17" name="test_foo[1]" time="0.0019059181213378906"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="24" name="test_synthesis" time="0.0008304119110107422"><system-out>
   Available `fixture_store` keys:
    - &apos;person&apos;
    - &apos;results_bag&apos;
    - &apos;other_person_initial&apos;
    - &apos;other_person_last&apos;
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[A-1]" time="0.005059480667114258"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[A-2]" time="0.0026307106018066406"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[B-1]" time="0.002949953079223633"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[B-2]" time="0.0029129981994628906"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[C-1]" time="0.002925395965576172"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[C-2]" time="0.0032401084899902344"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="36" name="test_basic" time="0.0006206035614013672"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="42" name="test_synthesis" time="0.006246328353881836"><system-out>test_id                 pytest_obj                                      status      duration_ms    algo_param  dataset_param      accuracy  dataset
----------------------  ----------------------------------------------  --------  -------------  ------------  ---------------  ----------  -------------
test_my_app_bench[A-1]  &lt;function test_my_app_bench at 0x7f407c59c9d8&gt;  passed         0.181437             1  A                  0.422087  my dataset #A
test_my_app_bench[A-2]  &lt;function test_my_app_bench at 0x7f407c59c9d8&gt;  passed         0.115156             2  A                  0.479985  my dataset #A
test_my_app_bench[B-1]  &lt;function test_my_app_bench at 0x7f407c59c9d8&gt;  passed         0.194788             1  B                  0.305267  my dataset #B
test_my_app_bench[B-2]  &lt;function test_my_app_bench at 0x7f407c59c9d8&gt;  passed         0.188351             2  B                  0.707418  my dataset #B
test_my_app_bench[C-1]  &lt;function test_my_app_bench at 0x7f407c59c9d8&gt;  passed         0.176668             1  C                  0.176422  my dataset #C
test_my_app_bench[C-2]  &lt;function test_my_app_bench at 0x7f407c59c9d8&gt;  passed         0.1719               2  C                  0.770816  my dataset #C
test_basic              &lt;function test_basic at 0x7f407c59cb70&gt;         passed         0.10252            nan  nan              nan         nan
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[A-1]" time="0.0030875205993652344"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[A-2]" time="0.003118753433227539"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[B-1]" time="0.0033397674560546875"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[B-2]" time="0.002680540084838867"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[C-1]" time="0.0032377243041992188"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[C-2]" time="0.0025734901428222656"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="48" name="test_basic" time="0.0022325515747070312"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="54" name="test_synthesis" time="0.0075604915618896484"><system-out>
Keys:
test_my_app_bench[A-1]
test_my_app_bench[A-2]
test_my_app_bench[B-1]
test_my_app_bench[B-2]
test_my_app_bench[C-1]
test_my_app_bench[C-2]
test_basic

First node:
&apos;pytest_obj&apos;: &lt;function test_my_app_bench at 0x7f406a764ea0&gt;
&apos;status&apos;: &apos;passed&apos;
&apos;duration_ms&apos;: 0.13399124145507812
&apos;algo_param&apos;: 1
&apos;dataset_param&apos;: &apos;A&apos;
&apos;dataset&apos;: &apos;my dataset #A&apos;
&apos;accuracy&apos;: 0.8248391881256557
test_id                 status      duration_ms    algo_param  dataset_param    dataset           accuracy
----------------------  --------  -------------  ------------  ---------------  -------------  -----------
test_my_app_bench[A-1]  passed         0.133991             1  A                my dataset #A    0.824839
test_my_app_bench[A-2]  passed         0.417948             2  A                my dataset #A    0.382101
test_my_app_bench[B-1]  passed         0.118494             1  B                my dataset #B    0.0474996
test_my_app_bench[B-2]  passed         0.11754              2  B                my dataset #B    0.500433
test_my_app_bench[C-1]  passed         0.119686             1  C                my dataset #C    0.119805
test_my_app_bench[C-2]  passed         0.114918             2  C                my dataset #C    0.0805072
test_basic              passed         0.104904           nan  nan              nan            nan
</system-out></testcase><testcase classname="pytest_harvest.tests.test_results_bag_basic" file="pytest_harvest/tests/test_results_bag_basic.py" line="3" name="test_results_bag_basic" time="0.001645803451538086"></testcase></testsuite>