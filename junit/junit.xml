<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="0" tests="44" time="5.561"><testcase classname="pytest_harvest.tests.test_all" file="pytest_harvest/tests/test_all.py" line="21" name="test_run_all_tests[test_all_together.py]" time="0.06381797790527344"><system-out>
Testing that running pytest on file test_all_together.py results in {&apos;passed&apos;: 9, &apos;failed&apos;: 0, &apos;skipped&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.7.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests0, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.4.1, cov-2.6.0
collected 9 items

test_run_all_tests.py .........

=========================== 9 passed in 0.03 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all" file="pytest_harvest/tests/test_all.py" line="21" name="test_run_all_tests[test_saved_fixture_in_fixture.py]" time="0.039726972579956055"><system-out>
Testing that running pytest on file test_saved_fixture_in_fixture.py results in {&apos;passed&apos;: 2, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.7.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests1, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.4.1, cov-2.6.0
collected 2 items

test_run_all_tests.py ..

=========================== 2 passed in 0.01 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all" file="pytest_harvest/tests/test_all.py" line="21" name="test_run_all_tests[test_default_fixtures.py]" time="0.05498242378234863"><system-out>
Testing that running pytest on file test_default_fixtures.py results in {&apos;passed&apos;: 8, &apos;failed&apos;: 0, &apos;skipped&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.7.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests2, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.4.1, cov-2.6.0
collected 8 items

test_run_all_tests.py ........

=========================== 8 passed in 0.03 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all" file="pytest_harvest/tests/test_all.py" line="21" name="test_run_all_tests[test_results_bags.py]" time="0.04702496528625488"><system-out>
Testing that running pytest on file test_results_bags.py results in {&apos;passed&apos;: 6, &apos;failed&apos;: 0, &apos;skipped&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.7.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests3, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.4.1, cov-2.6.0
collected 6 items

test_run_all_tests.py ......

=========================== 6 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all" file="pytest_harvest/tests/test_all.py" line="21" name="test_run_all_tests[test_get_session_results.py]" time="0.11525964736938477"><system-out>
Testing that running pytest on file test_get_session_results.py results in {&apos;passed&apos;: 16, &apos;failed&apos;: 1, &apos;skipped&apos;: 1}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.7.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests4, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.4.1, cov-2.6.0
collected 18 items

test_run_all_tests.py ........sF........

=================================== FAILURES ===================================
_________________________________ test_failing _________________________________

    def test_failing():
&gt;       pytest.fail(&quot;normal, intended failure here&quot;)
E       Failed: normal, intended failure here

test_run_all_tests.py:116: Failed
================ 1 failed, 16 passed, 1 skipped in 0.09 seconds ================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all" file="pytest_harvest/tests/test_all.py" line="21" name="test_run_all_tests[test_saved_fixture_in_global_var.py]" time="0.07059764862060547"><system-out>
Testing that running pytest on file test_saved_fixture_in_global_var.py results in {&apos;passed&apos;: 2, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.7.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests5, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.4.1, cov-2.6.0
collected 2 items

test_run_all_tests.py ..

=========================== 2 passed in 0.04 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_decorator" file="pytest_harvest/tests/test_decorator.py" line="32" name="test_normal_normal" time="0.0011944770812988281"><system-out>0
1
2
3
4
5
6
7
8
9
</system-out></testcase><testcase classname="pytest_harvest.tests.test_decorator" file="pytest_harvest/tests/test_decorator.py" line="42" name="test_normal_gen" time="0.0011067390441894531"><system-out>0
1
2
3
4
5
6
7
8
9
</system-out></testcase><testcase classname="pytest_harvest.tests.test_decorator" file="pytest_harvest/tests/test_decorator.py" line="55" name="test_gen_gen" time="0.0011069774627685547"><system-out>0
</system-out></testcase><testcase classname="pytest_harvest.tests.test_decorator" file="pytest_harvest/tests/test_decorator.py" line="66" name="test_gen_normal" time="0.0010869503021240234"><system-out>0
1
2
3
4
5
6
7
8
9
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="5" name="test_foo[world]" time="0.5020856857299805"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="5" name="test_foo[self]" time="0.40178871154785156"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="14" name="test_synthesis" time="0.002206563949584961"><system-out>
   Available `module_results_dct` keys:
    - test_foo[world]
    - test_foo[self]

   Contents of &apos;test_foo[world]&apos;:
    - &apos;pytest_obj&apos;: &lt;function test_foo at 0x7ffaa9acfbf8&gt;
    - &apos;status&apos;: passed
    - &apos;duration_ms&apos;: 500.9655952453613
    - &apos;status_details&apos;:
      - &apos;call&apos;: (&apos;passed&apos;, 500.9655952453613)
      - &apos;teardown&apos;: (&apos;passed&apos;, 0.20265579223632812)
      - &apos;setup&apos;: (&apos;passed&apos;, 0.9174346923828125)
    - &apos;params&apos;: OrderedDict([(&apos;p&apos;, &apos;world&apos;)])
    - &apos;fixtures&apos;: OrderedDict()
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="5" name="test_foo[world]" time="0.5018501281738281"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="5" name="test_foo[self]" time="0.40180373191833496"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="14" name="test_synthesis" time="0.016515731811523438"><system-out>
   `module_results_df` dataframe:

                                            pytest_obj  ...        p
test_id                                                 ...         
test_foo[world]  &lt;function test_foo at 0x7ffaa9ab7f28&gt;  ...    world
test_foo[self]   &lt;function test_foo at 0x7ffaa9ab7f28&gt;  ...     self

[2 rows x 4 columns]
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[0-False]" time="0.502650260925293"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[0-True]" time="1.0034756660461426"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[1-False]" time="0.40231800079345703"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[1-True]" time="0.8029303550720215"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="34" name="test_synthesis" time="0.007272005081176758"><system-out>
   `module_results_df` dataframe:

| test_id           | pytest_obj                            | status   |   duration_ms | double_sleep_time   |   person_param | person   |   nb_letters | current_time               |
|:------------------|:--------------------------------------|:---------|--------------:|:--------------------|---------------:|:---------|-------------:|:---------------------------|
| test_foo[0-False] | &lt;function test_foo at 0x7ffaa9a80a60&gt; | passed   |       501.106 | False               |              0 | world    |            5 | 2018-12-17T21:40:08.227524 |
| test_foo[0-True]  | &lt;function test_foo at 0x7ffaa9a80a60&gt; | passed   |      1001.56  | True                |              0 | world    |            5 | 2018-12-17T21:40:09.232631 |
| test_foo[1-False] | &lt;function test_foo at 0x7ffaa9a80a60&gt; | passed   |       400.937 | False               |              1 | self     |            4 | 2018-12-17T21:40:09.636825 |
| test_foo[1-True]  | &lt;function test_foo at 0x7ffaa9a80a60&gt; | passed   |       801.373 | True                |              1 | self     |            4 | 2018-12-17T21:40:10.441669 |
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="5" name="test_foo[world]" time="0.0013751983642578125"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="5" name="test_foo[self]" time="0.0013582706451416016"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="17" name="test_synthesis" time="0.0010616779327392578"><system-out>
   Available `fixture_store` keys:
    - &apos;person&apos;
    - &apos;results_bag&apos;

   Contents of `fixture_store[&apos;results_bag&apos;]`:
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-False]&apos;:
      - &apos;nb_letters&apos;: 5
      - &apos;current_time&apos;: 2018-12-17T21:40:08.227524
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-True]&apos;:
      - &apos;nb_letters&apos;: 5
      - &apos;current_time&apos;: 2018-12-17T21:40:09.232631
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-False]&apos;:
      - &apos;nb_letters&apos;: 4
      - &apos;current_time&apos;: 2018-12-17T21:40:09.636825
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-True]&apos;:
      - &apos;nb_letters&apos;: 4
      - &apos;current_time&apos;: 2018-12-17T21:40:10.441669
    - &apos;pytest_harvest/tests/test_doc_basic_results_bag.py::test_foo[world]&apos;:
      - &apos;nb_letters&apos;: 5
      - &apos;current_time&apos;: 2018-12-17T21:40:10.454017
    - &apos;pytest_harvest/tests/test_doc_basic_results_bag.py::test_foo[self]&apos;:
      - &apos;nb_letters&apos;: 4
      - &apos;current_time&apos;: 2018-12-17T21:40:10.457064
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="17" name="test_foo[0]" time="0.0010447502136230469"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="17" name="test_foo[1]" time="0.0014119148254394531"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="24" name="test_synthesis" time="0.0009696483612060547"><system-out>
   Available `fixture_store` keys:
    - &apos;person&apos;
    - &apos;results_bag&apos;

   Contents of `fixture_store[&apos;person&apos;]`:
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-False]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-True]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-False]&apos;: self
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-True]&apos;: self
    - &apos;pytest_harvest/tests/test_doc_basic_saved_fixture.py::test_foo[0]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_saved_fixture.py::test_foo[1]&apos;: self
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[A-1]" time="0.0012612342834472656"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[A-2]" time="0.0010957717895507812"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[B-1]" time="0.0014081001281738281"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[B-2]" time="0.0011928081512451172"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[C-1]" time="0.0011477470397949219"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[C-2]" time="0.0013086795806884766"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="36" name="test_basic" time="0.0007271766662597656"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="42" name="test_synthesis" time="0.010498285293579102"><system-out>test_id                 pytest_obj                                      status      duration_ms    algo_param  dataset_param      accuracy  dataset
----------------------  ----------------------------------------------  --------  -------------  ------------  ---------------  ----------  -------------
test_my_app_bench[A-1]  &lt;function test_my_app_bench at 0x7ffaa9a8f2f0&gt;  passed         0.195026             1  A                  0.629539  my dataset #A
test_my_app_bench[A-2]  &lt;function test_my_app_bench at 0x7ffaa9a8f2f0&gt;  passed         0.159502             2  A                  0.243036  my dataset #A
test_my_app_bench[B-1]  &lt;function test_my_app_bench at 0x7ffaa9a8f2f0&gt;  passed         0.173807             1  B                  0.453375  my dataset #B
test_my_app_bench[B-2]  &lt;function test_my_app_bench at 0x7ffaa9a8f2f0&gt;  passed         0.179529             2  B                  0.832052  my dataset #B
test_my_app_bench[C-1]  &lt;function test_my_app_bench at 0x7ffaa9a8f2f0&gt;  passed         0.180721             1  C                  0.816809  my dataset #C
test_my_app_bench[C-2]  &lt;function test_my_app_bench at 0x7ffaa9a8f2f0&gt;  passed         0.211                2  C                  0.133166  my dataset #C
test_basic              &lt;function test_basic at 0x7ffaa9a8f488&gt;         passed         0.204086           nan  nan              nan         nan
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[A-1]" time="0.0013439655303955078"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[A-2]" time="0.0019197463989257812"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[B-1]" time="0.0013172626495361328"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[B-2]" time="0.0013246536254882812"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[C-1]" time="0.001382589340209961"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[C-2]" time="0.001384735107421875"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="48" name="test_basic" time="0.0007963180541992188"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="54" name="test_synthesis" time="0.010782957077026367"><system-out>
Keys:
test_my_app_bench[A-1]
test_my_app_bench[A-2]
test_my_app_bench[B-1]
test_my_app_bench[B-2]
test_my_app_bench[C-1]
test_my_app_bench[C-2]
test_basic

First node:
&apos;pytest_obj&apos;: &lt;function test_my_app_bench at 0x7ffa97be6b70&gt;
&apos;status&apos;: &apos;passed&apos;
&apos;duration_ms&apos;: 0.22673606872558594
&apos;algo_param&apos;: 1
&apos;dataset_param&apos;: &apos;A&apos;
&apos;dataset&apos;: &apos;my dataset #A&apos;
&apos;accuracy&apos;: 0.801539302870961
test_id                 status      duration_ms    algo_param  dataset_param    dataset           accuracy
----------------------  --------  -------------  ------------  ---------------  -------------  -----------
test_my_app_bench[A-1]  passed         0.226736             1  A                my dataset #A    0.801539
test_my_app_bench[A-2]  passed         0.327826             2  A                my dataset #A    0.0770657
test_my_app_bench[B-1]  passed         0.190496             1  B                my dataset #B    0.856256
test_my_app_bench[B-2]  passed         0.23365              2  B                my dataset #B    0.173601
test_my_app_bench[C-1]  passed         0.191212             1  C                my dataset #C    0.231681
test_my_app_bench[C-2]  passed         0.220299             2  C                my dataset #C    0.270277
test_basic              passed         0.200033           nan  nan              nan            nan
</system-out></testcase><testcase classname="pytest_harvest.tests.test_results_bag_basic" file="pytest_harvest/tests/test_results_bag_basic.py" line="3" name="test_results_bag_basic" time="0.0012125968933105469"></testcase></testsuite>